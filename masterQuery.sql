--DROP TABLE TABLENAME CASCADE CONSTRAINTS;

--ALL PLAYERS IN DESCENDING ORDER BY LEAGUE JOIN DATE
SELECT * FROM PLAYER ORDER BY LEAGUEJOINDATE DESC;

--PLAYERS SEPARATED BY TEAM
SELECT * FROM PLAYER WHERE TEAMID = 'EFOX';
SELECT * FROM PLAYER WHERE TEAMID = 'C9';
SELECT * FROM PLAYER WHERE TEAMID = 'RNG';
SELECT * FROM PLAYER WHERE TEAMID = 'IG';
SELECT * FROM PLAYER WHERE TEAMID = 'CLG';
SELECT * FROM PLAYER WHERE TEAMID = 'GG';
SELECT * FROM PLAYER WHERE TEAMID = 'OPTG';
SELECT * FROM PLAYER WHERE TEAMID = 'TLIQ';

--ANOTHER WAY TO SEPERATE PLAYERS BY TEAM AND ONLY SHOWING CERTAIN FIELDS
select P.PLAYERID AS ID, P.FIRSTNAME || ' ' || P.LASTNAME AS FULLNAME, P.TEAMID AS TEAM
from PLAYER P
inner join TEAMROSTER R
on P.PLAYERID = R.PLAYERID
WHERE R.TEAMID = 'GG';

--SHOWING C9 TEAM
select P.PLAYERID AS ID, P.FIRSTNAME || ' ' || P.LASTNAME AS FULLNAME, P.TEAMID AS TEAM
from PLAYER P
inner join TEAMROSTER R
on P.PLAYERID = R.PLAYERID
WHERE R.TEAMID = 'C9';

--PLAYERS WITH THE HIGHEST RANK
SELECT * FROM PLAYERRANKING WHERE RANK = 'Challenger';

--PLAYERS WITH THE HIGHEST RANK ONLY SHOWING CERTAIN FIELDS SORTED BY TEAMS
select P.PLAYERID AS ID, P.FIRSTNAME || ' ' || P.LASTNAME AS FULLNAME, P.TEAMID AS TEAM
from PLAYER P
inner join PLAYERRANKING R
on P.PLAYERID = R.PLAYERID
WHERE R.RANK = 'Challenger' ORDER BY TEAM DESC;

--EVERYBODY ELSE SORTED BY RANK MASTER 3 BEING THE HIGHEST MASTER 5 BEING THE LOWEST IN HIGH RANKING
SELECT * FROM PLAYERRANKING WHERE RANK != 'Challenger' ORDER BY RANK;

--MATCHES THAT TOOK PLACE ON CERTAIN DAYS
SELECT MATCHID FROM MATCH WHERE GAMEDATE = '15-NOV-18';
SELECT MATCHID FROM MATCH WHERE GAMEDATE = '16-NOV-18';
SELECT MATCHID FROM MATCH WHERE GAMEDATE = '17-NOV-18';
SELECT MATCHID FROM MATCH WHERE GAMEDATE = '18-NOV-18';
SELECT MATCHID FROM MATCH WHERE GAMEDATE = '19-NOV-18';
SELECT MATCHID FROM MATCH WHERE GAMEDATE = '20-NOV-18';

--LOOKING UP WHO ON EFOX PLAYED ON THE 16TH OF NOV
select P.PLAYERID, P.FIRSTNAME || ' ' || P.LASTNAME as FULLNAME, P.TEAMID
from PLAYER P
inner join MATCH M
on P.TEAMID = M.TEAMID1
WHERE M.GAMEDATE like '%16-NOV-18%' AND M.TEAMID1 = 'EFOX';

--SHOWING EVERY MATCHID WHERE OPTG PARTICIPATED
SELECT MATCHID FROM MATCH WHERE TEAMID1 = 'OPTG' OR TEAMID2 = 'OPTG';

--SHOWING THE FIRST BRACKET WITH EACH TEAMS WINS LOSSES
SELECT T.TEAMNAME AS TEAM, T.WINS, T.DRAWS, T.LOSSES
FROM TEAM T 
INNER JOIN BRACKETPLACEMENT P
ON T.TEAMID = P.TEAMID
INNER JOIN BRACKET B
ON P.BRACKETID = B.BRACKETID
WHERE B.BRACKETID = 25705094;

--SHOWING THE SECOND BRACKET WITH EACH TEAMS WINS LOSSES
SELECT T.TEAMNAME AS TEAM, T.WINS, T.DRAWS, T.LOSSES
FROM TEAM T 
INNER JOIN BRACKETPLACEMENT P
ON T.TEAMID = P.TEAMID
INNER JOIN BRACKET B
ON P.BRACKETID = B.BRACKETID
WHERE B.BRACKETID = 25703094;

--SHOWING SPONSORSHIPS FROM EACH TEAM
SELECT T.TEAMID, T.TEAMNAME AS TEAM, E.SPONSORID,E.SPONSORNAME AS SPONSOR
FROM TEAM T
INNER JOIN SPONSORSHIPS S
ON T.TEAMID = S.TEAMID
INNER JOIN SPONSOR E
ON E.SPONSORID = S.SPONSORID
WHERE S.SPONSORID != 'NULL';

--DISPLAYING FIRST BRACKET A BRACKET AND SORTING IT BY WINS
SELECT B.BRACKETID AS BRACKET, B.TEAMID AS CLANTAG,T.TEAMNAME AS TEAM, T.WINS
FROM BRACKETPLACEMENT B
INNER JOIN TEAM T
ON T.TEAMID = B.TEAMID
WHERE B.BRACKETID = 25705094 ORDER BY WINS DESC;

--DISPLAYING SECOND BRACKET A BRACKET AND SORTING IT BY WINS
SELECT B.BRACKETID AS BRACKET, B.TEAMID AS CLANTAG,T.TEAMNAME AS TEAM, T.WINS
FROM BRACKETPLACEMENT B
INNER JOIN TEAM T
ON T.TEAMID = B.TEAMID
WHERE B.BRACKETID != 25705094 ORDER BY WINS DESC;

--DISPLAYING REFEREES THAT WERE PRESENT AT EACH MATCH THAT TOOK PLACE
SELECT R.REFEREEID,R.FIRSTNAME || ' ' || R.LASTNAME as FULLNAME,M.MATCHID,
M.GAMEDATE,M.TEAMID1 AS TEAM1,M.TEAMID2 AS TEAM2
FROM REFEREE R
INNER JOIN REFEREES S
ON R.REFEREEID = S.REFEREEID
INNER JOIN MATCH M
ON M.MATCHID = S.MATCHID
WHERE S.MATCHID != 'NULL';

--ALTHOUGH ONE GAME WAS INSERTED AS MOCK DATA WE CAN MANIPULATE THESE 3 TABLES
--TO SEE CERTAIN DETAILS ABOUT THE GAME THAT IS BEING USED DURING THE COMPETITION
SELECT D.DEVELOPERID,D.DEVELOPERNAME AS DEVELOPER,G.GAMEID,G.GAMENAME AS GAME,
M.GAMEMODEID,M.GAMEMODENAME AS GAMEMODE,M.GAMEMODEDESCRIPTION AS DESCRIPTION
FROM DEVELOPER D
INNER JOIN GAME G
ON G.DEVELOPERID = D.DEVELOPERID
INNER JOIN GAMEMODE M
ON M.GAMEID = G.GAMEID
WHERE G.GAMEID !='NULL';
